#!/usr/bin/env python
# -*- coding: utf-8 -*-

import awsm
from datetime import datetime
import sys


def run():
    start = datetime.now()

    configFile = '../test_data/AWSM_test_config.ini'
    if len(sys.argv) > 1:
        configFile = sys.argv[1]

    # =========================================================================
    # Initialize and run basin
    # =========================================================================
    #

    # 1. initialize
    # try:
    with awsm.framework.framework.AWSM(configFile) as a:

        if a.do_forecast:
            runtype = 'forecast'
        else:
            runtype = 'smrf'

        if not a.config['isnobal restart']['restart_crash']:
            # distribute data by running smrf
            if a.do_smrf:
                a.runSmrf()

            # convert smrf output to ipw for iSnobal
            if a.do_make_in:
                a.nc2ipw(runtype)

            if a.do_isnobal:
                # run iSnobal
                a.run_isnobal()

            elif a.do_ipysnobal:
                # run iPySnobal
                a.run_ipysnobal()

                # convert ipw back to netcdf for processing
            if a.do_make_nc:
                a.ipw2nc(runtype)
        # if restart
        else:
            if a.do_isnobal:
                # restart iSnobal from crash
                a.restart_crash_image()
                # convert ipw back to netcdf for processing
            elif a.do_ipysnobal:
                # run iPySnobal
                a.run_ipysnobal()

            if a.do_make_nc:
                a.ipw2nc(runtype)

        # Run iPySnobal from SMRF in memory
        if a.do_smrf_ipysnobal:
            a.run_smrf_ipysnobal()

        a._logger.info('AWSM finished in: {}'.format(datetime.now() - start))


if __name__ == '__main__':
    run()
